Command = {
  id: uint,
  CommandData,
  Extensible,
}

CommandData = (
  SessionCommand //
  SettingsCommand //
  InteractionCommand
)

EmptyParams = { Extensible }

Extensible = {
  *text => any
}

SessionCommand = (SessionNewCommand)

CapabilitiesRequest = {
  ?atName: text,
  ?atVersion: text,
  ?platformName: text,
  Extensible,
}

SessionNewCommand = {
  method: "session.new",
  params: {capabilities: CapabilitiesRequestParameters},
}

CapabilitiesRequestParameters = {
  ?alwaysMatch: CapabilitiesRequest,
}

SettingsCommand = {
  SettingsSetSettingsCommand //
  SettingsGetSettingsCommand //
  SettingsGetSupportedSettingsCommand
}

SettingsSetSettingsCommand = {
  method: "settings.setSettings",
  params: SettingsSetSettingsParameters
}

SettingsSetSettingsParameters = {
  settings: [1* SettingsSetSettingsParametersItem ],
}

SettingsSetSettingsParametersItem = {
  name: text,
  value: any,
  Extensible,
}

SettingsGetSettingsCommand = {
  method: "settings.getSettings",
  params: SettingsGetSettingsParameters
}

SettingsGetSettingsParameters = {
  settings: [1* SettingsGetSettingsParametersItem ],
}

SettingsGetSettingsParametersItem = {
  name: text,
  Extensible,
}

SettingsGetSupportedSettingsCommand = {
  method: "settings.getSupportedSettings",
  params: EmptyParams
}

InteractionCommand = (InteractionUserIntentCommand)

InteractionUserIntentCommand = {
  method: "interaction.userIntent",
  params: InteractionUserIntentParameters
}

InteractionUserIntentParameters = (
  PressKeysIntentParameters /
  ExtensionIntentParameters
)

PressKeysIntentParameters = {
  "name" => "pressKeys",
  "keys" => KeyCombination,
}

KeyCombination = [
  1* text
]

ExtensionIntentParameters = {
  "name" => text,
  Extensible,
}
